#!/bin/bash
# @@@ START COPYRIGHT @@@
#
# (C) Copyright 2014 Hewlett-Packard Development Company, L.P.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
# @@@ END COPYRIGHT @@@

function usage {
    echo "Usage: $0 list"
    echo "       $0 upload <absolute_path_to_file>"
    echo ""
    echo "       # This option retains the directory structure as seen via the list command"
    echo "       $0 download <file_or_directory_as_seen_via_list>"
    echo ""
    echo "       # This option overrides the directory structure as seen via the list command"
    echo "       $0 download <file_or_directory_as_seen_via_list> <dest_file_or_directory>"
    echo ""
}

backupContainer="BackupContainer"
swift=/usr/local/bin/swift
export OS_REGION_NAME=region-a.geo-1
export OS_DNS_SERVICE_TYPE=hpext:dns
export OS_AUTH_URL=https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0/
export OS_TENANT_NAME=trafodion
export OS_USERNAME=<%= cloud_auto_user %>
export OS_PASSWORD=<%= cloud_auto_passwd %>

cmd="$1"

if [[ -z "$cmd" || $cmd =~ ^- ]]; then
    usage
    exit 1
fi

if [[ "$cmd" = "list" ]]; then
    echo "Listing contents of container $backupContainer ..."
    $swift list $backupContainer
    exit $?
fi

fName="$2"
if [[ -z "$cmd" ]]; then
    usage
    exit 1
fi

if [[ "$cmd" = "upload" ]]; then
    host=$(hostname -s)
    uploadOptions="--changed --skip-identical"

    # check if file size is greater than 4.99 GB (5,358,000,000 bytes)
    # if file size is too big then segment the file to 2 GB chunks
    fSize=$(stat -c%s "$fName")
    if [ $fSize -gt 5358000000 ]; then
        uploadOptions="$uploadOptions -S 2147483648"
    fi

    # get md5sum of file from the cloud
    fCloudMd5sum=$($swift stat $backupContainer ${host}${fName} 2>/dev/null | grep "ETag:" | awk '{print $2}')
    # get current md5sum of file
    fMd5sum=$(md5sum $fName | awk '{print $1}')

    if [[ $fMd5sum == $fCloudMd5sum ]]; then
        echo "File $fName has not changed since the last backup. Skipping upload ..."
    else
        # if fCloudMd5sum is not empty then file has been uploaded before
        if [[ -n "$fCloudMd5sum" ]]; then
            # set header X-Delete-After to 30 days so we do not keep
            # more than 30 days worth of previous version of the file
            $swift post -H 'x-delete-after: 259200' $backupContainer ${host}${fName}
        fi

        echo "Uploading file $fName ..."
        $swift upload $uploadOptions $backupContainer/$host $fName
    fi
    exit $?
fi

if [[ "$cmd" = "download" ]]; then
    downloadOptions=""

    if [ $# -eq 3 ]; then
        downloadOptions="--output=$3"
    fi

    echo "Downloading file $fName ..."
    $swift download $downloadOptions $backupContainer $fName
    exit $?
fi

usage
exit 1

