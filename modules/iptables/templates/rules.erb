*filter
:INPUT ACCEPT [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:BLACKLIST - [0:0]
:LOGDROP - [0:0]
:TRAF-INPUT - [0:0]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
# machine talking to itself on loopback and public IP
-A INPUT -i lo -j ACCEPT
-A INPUT -s <%= ipaddress %> -m comment --comment "Allow machine to talk to itself on public IP" -j ACCEPT
-A INPUT -j BLACKLIST
-A INPUT -j TRAF-INPUT
-A INPUT -m limit --limit 1/sec -j LOG --log-prefix "IPTABLES (limit 1/sec): " --log-level 7
-A INPUT -j DROP
<% blacklist_rules4.each do |blacklist| -%>
-A BLACKLIST <%= blacklist %>
<% end -%>
# Log IP making more than 1 connection per second for SSH
-A LOGDROP -p tcp -m tcp --dport 22 -m limit --limit 1/s -j LOG --log-prefix "IPTABLES (ssh_blacklist): " --log-level 7
-A LOGDROP -j REJECT --reject-with icmp-host-prohibited
# accept all ICMP request but limit them to 1 per sec
-A TRAF-INPUT -m icmp -p icmp --icmp-type any -m state --state NEW -m limit --limit 1/s --limit-burst 1 -j ACCEPT
# SSH from anywhere
-A TRAF-INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
# SNMP from trafodion cacti
#-A TRAF-INPUT -m udp -p udp --dport 161 -s 15.125.67.199 -j ACCEPT
#-A TRAF-INPUT -m udp -p udp --dport 161 -s 192.168.0.99 -j ACCEPT
# Public TCP ports
<% public_tcp_ports.each do |port| -%>
-A TRAF-INPUT -m tcp -p tcp --dport <%= port %> -j ACCEPT
<% end -%>
# Public UDP ports
<% public_udp_ports.each do |port| -%>
-A TRAF-INPUT -m udp -p udp --dport <%= port %> -j ACCEPT
<% end -%>
# Per-host rules
<% rules4.each do |rule| -%>
-A TRAF-INPUT <%= rule %>
<% end -%>
# log whatever gets to the end of our iptables so we will know when we
# need new rules
-A TRAF-INPUT -j LOG --log-prefix "IPTABLES (End TRAF-INPUT): " --log-level 7
-A TRAF-INPUT -j REJECT --reject-with icmp-host-prohibited
COMMIT
